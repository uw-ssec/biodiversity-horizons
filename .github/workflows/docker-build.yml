name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main
    paths:
      - "Dockerfile"
      - "**/*.R"
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract name & version
        id: version
        run: |
          echo "PACKAGE=$(grep '^Package:' DESCRIPTION | awk '{print $2}')" >> $GITHUB_ENV
          echo "VERSION=$(grep '^Version:' DESCRIPTION | awk '{print $2}')" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.PACKAGE }}:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/${{ env.PACKAGE }}:latest
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from:
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{
            env.PACKAGE }}:latest
          cache-to: type=inline
  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract name & version
        id: version
        run: |
          echo "PACKAGE=$(grep '^Package:' DESCRIPTION | awk '{print $2}')" >> $GITHUB_ENV
          echo "VERSION=$(grep '^Version:' DESCRIPTION | awk '{print $2}')" >> $GITHUB_ENV

      - name: Pull Docker Image for Testing
        run: |
          sleep 10
          docker pull ghcr.io/${{ github.repository_owner }}/${{ env.PACKAGE }}:latest

      - name: Run Container Tests
        run:
          docker run --rm --entrypoint "R" ghcr.io/${{ github.repository_owner
          }}/${{ env.PACKAGE }}:${{env.VERSION }} -e
          "library(biodiversityhorizons)"

      - name: Run docker_exposure.sh (exposure run test)
        env:
          CONTAINER:
            ghcr.io/${{ github.repository_owner }}/${{ env.PACKAGE }}:${{
            env.VERSION }}
        run: |
          chmod +x docker_exposure.sh
          bash docker_exposure.sh "./data-raw/shp_config.yml" "./outputs"

      - name: Run .shp to .rds (conversion run test)
        env:
          CONTAINER:
            ghcr.io/${{ github.repository_owner }}/${{ env.PACKAGE }}:${{
            env.VERSION }}
        run: |
          chmod +x docker_exposure.sh
          bash docker_shp2rds.sh  "./data-raw/tier_1/data/species_ranges/subset_amphibians.shp" "./data-raw/species_new.rds"

      - name: Run .tif to .rds (conversion run test)
        env:
          CONTAINER:
            ghcr.io/${{ github.repository_owner }}/${{ env.PACKAGE }}:${{
            env.VERSION }}
        run: |
          chmod +x docker_exposure.sh
          bash docker_tif2rds.sh "./data-raw/tier_1/data/climate/historical.tif" "./data-raw/historical_climate_data_new.rds"
          bash docker_tif2rds.sh "./data-raw/tier_1/data/climate/ssp585.tif" "./data-raw/future_climate_data_new.rds" -y "2015:2100"
